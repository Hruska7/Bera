// Code generated by rlpgen. DO NOT EDIT.

//go:build !norlpgen
// +build !norlpgen

package types

import "github.com/ethereum/go-ethereum/core/types"
import "github.com/ethereum/go-ethereum/rlp"
import "io"

func (obj *StargazerReceipts) EncodeRLP(_w io.Writer) error {
	w := rlp.NewEncoderBuffer(_w)
	_tmp0 := w.List()
	_tmp1 := w.List()
	for _, _tmp2 := range obj.Receipts {
		if err := _tmp2.EncodeRLP(w); err != nil {
			return err
		}
	}
	w.ListEnd(_tmp1)
	w.ListEnd(_tmp0)
	return w.Flush()
}

func (obj *StargazerReceipts) DecodeRLP(dec *rlp.Stream) error {
	var _tmp0 StargazerReceipts
	{
		if _, err := dec.List(); err != nil {
			return err
		}
		// Receipts:
		var _tmp1 []*types.ReceiptForStorage
		if _, err := dec.List(); err != nil {
			return err
		}
		for dec.MoreDataInList() {
			_tmp2 := new(types.ReceiptForStorage)
			if err := _tmp2.DecodeRLP(dec); err != nil {
				return err
			}
			_tmp1 = append(_tmp1, _tmp2)
		}
		if err := dec.ListEnd(); err != nil {
			return err
		}
		_tmp0.Receipts = _tmp1
		if err := dec.ListEnd(); err != nil {
			return err
		}
	}
	*obj = _tmp0
	return nil
}
