// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mock

import (
	"pkg.berachain.dev/polaris/eth/core"
	"sync"
)

// Ensure, that TxPoolPluginMock does implement core.TxPoolPlugin.
// If this is not the case, regenerate this file with moq.
var _ core.TxPoolPlugin = &TxPoolPluginMock{}

// TxPoolPluginMock is a mock implementation of core.TxPoolPlugin.
//
//	func TestSomethingThatUsesTxPoolPlugin(t *testing.T) {
//
//		// make and configure a mocked core.TxPoolPlugin
//		mockedTxPoolPlugin := &TxPoolPluginMock{
//			GetHandlerFunc: func() core.Handler {
//				panic("mock out the GetHandler method")
//			},
//		}
//
//		// use mockedTxPoolPlugin in code that requires core.TxPoolPlugin
//		// and then make assertions.
//
//	}
type TxPoolPluginMock struct {
	// GetHandlerFunc mocks the GetHandler method.
	GetHandlerFunc func() core.Handler

	// calls tracks calls to the methods.
	calls struct {
		// GetHandler holds details about calls to the GetHandler method.
		GetHandler []struct {
		}
	}
	lockGetHandler sync.RWMutex
}

// GetHandler calls GetHandlerFunc.
func (mock *TxPoolPluginMock) GetHandler() core.Handler {
	if mock.GetHandlerFunc == nil {
		panic("TxPoolPluginMock.GetHandlerFunc: method is nil but TxPoolPlugin.GetHandler was just called")
	}
	callInfo := struct {
	}{}
	mock.lockGetHandler.Lock()
	mock.calls.GetHandler = append(mock.calls.GetHandler, callInfo)
	mock.lockGetHandler.Unlock()
	return mock.GetHandlerFunc()
}

// GetHandlerCalls gets all the calls that were made to GetHandler.
// Check the length with:
//
//	len(mockedTxPoolPlugin.GetHandlerCalls())
func (mock *TxPoolPluginMock) GetHandlerCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockGetHandler.RLock()
	calls = mock.calls.GetHandler
	mock.lockGetHandler.RUnlock()
	return calls
}
