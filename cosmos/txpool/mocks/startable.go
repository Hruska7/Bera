// Code generated by mockery v2.34.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Startable is an autogenerated mock type for the Startable type
type Startable struct {
	mock.Mock
}

type Startable_Expecter struct {
	mock *mock.Mock
}

func (_m *Startable) EXPECT() *Startable_Expecter {
	return &Startable_Expecter{mock: &_m.Mock}
}

// Start provides a mock function with given fields:
func (_m *Startable) Start() {
	_m.Called()
}

// Startable_Start_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Start'
type Startable_Start_Call struct {
	*mock.Call
}

// Start is a helper method to define mock.On call
func (_e *Startable_Expecter) Start() *Startable_Start_Call {
	return &Startable_Start_Call{Call: _e.mock.On("Start")}
}

func (_c *Startable_Start_Call) Run(run func()) *Startable_Start_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Startable_Start_Call) Return() *Startable_Start_Call {
	_c.Call.Return()
	return _c
}

func (_c *Startable_Start_Call) RunAndReturn(run func()) *Startable_Start_Call {
	_c.Call.Return(run)
	return _c
}

// NewStartable creates a new instance of Startable. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewStartable(t interface {
	mock.TestingT
	Cleanup(func())
}) *Startable {
	mock := &Startable{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
